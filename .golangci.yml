# This file was inspired by the golangci-lint one:
# https://github.com/golangci/golangci-lint/blob/master/.golangci.yml
run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 15m
linters-settings:
  govet:
    shadow: true
  golint:
    min-confidence: 0
  gocyclo:
    min-complexity: 20
  gocognit:
    min-complexity: 40
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 5
  misspell:
    locale: UK
  lll:
    line-length: 140
  gofmt:
    simplify: false
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - wrapperFunc
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - hugeParam
  revive:
    rules:
      # disabled as parameter names are useful for context even when unused, especially in interface implementations
      - name: unused-parameter
        severity: warning
        disabled: true
    include:
      - "**/*_test.go" # Specify test files to include

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - unused
    - dogsled
    - errcheck
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - revive
    - gosec
    - gosimple
    - govet
    - ineffassign
    - nakedret
    - staticcheck
    - typecheck
    - unconvert
    - unused
    - whitespace
    - gocognit
    - prealloc

issues:
  exclude-rules:
    - path: _test\.go|config.go
      linters:
        - staticcheck
        - errcheck
        - gosec
    # Allow specific G101 (hardcoded credentials) warning in error_content.go
    # Reason: The G101 linter detects potential hardcoded credentials, which is critical in security-sensitive areas.
    # However, the flagged code in error_content.go does not contain actual credentials but rather uses placeholder text
    # for error handling purposes. This is reviewed periodically to ensure no real credentials are inadvertently included.
    - path: error_content.go
      text: "G101"
      linters:
        - gosec
      source: "IDTokenDescription"
    # Allow rangeValCopy warning in groups.go
    # Reason: The rangeValCopy warning is triggered when a range loop copies values rather than referencing them, which
    # can lead to unnecessary allocations and impact performance. However, in groups.go, this copy is intentional
    # and safe because the data is minimal and not modified within the loop. Refactoring this would add unnecessary
    # complexity without performance benefits.
    - path: groups.go
      text: "rangeValCopy"
      linters:
        - gocritic
    # Allow dot import in test files for goconvey
    - path: _test.go
      text: "dot-imports"
      linters:
        - revive
      source: "github.com/smartystreets/goconvey/convey"
  new: false